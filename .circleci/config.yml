version: 2.1
executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
orbs:
  aws-cli: circleci/aws-cli@3.1

jobs:
  test:
    docker:
      - image: cimg/openjdk:17.0.3
        environment:
          MAVEN_OPTS: -Xmx3200m
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
    steps:
      - checkout
      - run:
          name: Wait for Database Connection
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Install the MySQL client
          command: sudo apt-get update && sudo apt-get install -y mysql-client
      - run:
          name: Init the the database
          command: mysql -h 127.0.0.1 -u root < local/01.sql
      - restore_cache:
          keys:
            -  v1-dependencies-{{ checksum "pom.xml" }}
            -  v1-dependencies-
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: mvn clean verify -Dspring.profiles.active=local
      - run:
          name: Generate and copy reports
          command: |
            sudo cp -R ./target/site/jacoco /tmp/artifacts || true
            sudo cp -R ./target/allure-report /tmp/artifacts || true
          when: always
      - store_artifacts:
          path: /tmp/artifacts

  build:
    environment:
      IMAGE: 738181112533.dkr.ecr.us-east-2.amazonaws.com/buy-it-api
    resource_class: medium
    docker:
      - image: cimg/openjdk:17.0.3
    steps:
      - checkout
      - restore_cache:
          keys:
            -  v1-dependencies-{{ checksum "pom.xml" }}
            -  v1-dependencies-
      - run:
          name: Package application
          command: mvn clean package -Dproject.version=1.0.0-${CIRCLE_BUILD_NUM}
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - setup_remote_docker:
          docker_layer_caching: true
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Login to ECR
          command: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 738181112533.dkr.ecr.us-east-2.amazonaws.com
      - run:
          name: Build Docker image
          command: | 
            docker build -t buy-it-api:latest .
            docker build -t buy-it-api:${CIRCLE_BUILD_NUM} .
      - run:
          name: Publish Docker image
          command: |
            docker tag buy-it-api:latest ${IMAGE}:latest
            docker tag buy-it-api:${CIRCLE_BUILD_NUM} ${IMAGE}:${CIRCLE_BUILD_NUM}
            docker push ${IMAGE}:latest
            docker push ${IMAGE}:${CIRCLE_BUILD_NUM}
      - run:
          name: Success build notify
          command: ./tools/notify.sh success 'Buy IT API'
          when: on_success
      - run:
          name: Failed build notify
          command: ./tools/notify.sh failed 'Buy IT API'
          when: on_fail

workflows:
  version: 2
  build:
    jobs:
      - test
      - build:
          context:
          - AWS
          - SLACK
          filters:
            branches:
              only: master